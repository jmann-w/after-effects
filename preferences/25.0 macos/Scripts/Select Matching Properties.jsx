// This script was generated by OpenAI's ChatGPT, and brought to you by Jake Bartlett's mostly incompetent script editing abilities. Use at your own risk. www.jakeinmotion.com
// This script will select matching properties to the current selection in all layers of the active comp.

(function() {
    var comp = app.project.activeItem;

    // Check if there is an active composition
    if (!comp || !(comp instanceof CompItem)) {
        alert('No active composition.');
        return;
    }

    // Check for selected properties
    var selectedProperties = comp.selectedProperties;
    if (selectedProperties.length === 0) {
        alert('No properties selected.');
        return;
    }

    // Collect the match names of selected properties that have a value
    var matchNames = [];
    for (var i = 0; i < selectedProperties.length; i++) {
        var prop = selectedProperties[i];
        // Only include if it's a property with a value (not a group)
        if (prop.propertyValueType && prop.propertyValueType !== PropertyValueType.NO_VALUE) {
            matchNames.push(prop.matchName);
        }
    }

    // Function to check if a match name is in the array
    function containsMatchName(array, matchName) {
        for (var i = 0; i < array.length; i++) {
            if (array[i] === matchName) {
                return true;
            }
        }
        return false;
    }

    // Function to select properties by match name
    function selectMatchingProperties(layer, matchNames) {
        for (var j = 1; j <= layer.numProperties; j++) {
            var prop = layer.property(j);
            if (prop) {
                // Only select the property if it's not a group and the matchName matches
                if (prop.propertyValueType && prop.propertyValueType !== PropertyValueType.NO_VALUE && containsMatchName(matchNames, prop.matchName)) {
                    prop.selected = true;
                }

                // If the property is a group, we recurse into it
                if (prop.numProperties) {
                    selectMatchingProperties(prop, matchNames);
                }
            }
        }
    }

    app.beginUndoGroup('Select Matching Properties');

    // Iterate over all layers and select matching properties
    for (var k = 1; k <= comp.numLayers; k++) {
        var layer = comp.layer(k);
        selectMatchingProperties(layer, matchNames);
    }

    app.endUndoGroup();
})();
